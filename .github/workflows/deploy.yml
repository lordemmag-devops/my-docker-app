name: Deploy Blue-Green

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./  # Ensures commands run in project root
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Latest version
        with:
          fetch-depth: 0  # Full history for clean builds

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  # Latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine active environment
        id: env
        run: |
          # Alternate between blue and green (customize as needed)
          ACTIVE_ENV=$( [ "$GITHUB_RUN_NUMBER" -eq "0" ] && echo "blue" || echo "green" )
          echo "ACTIVE_ENV=$ACTIVE_ENV" >> $GITHUB_ENV

      - name: Build and push images for inactive environment
        run: |
          if [ "${{ env.ACTIVE_ENV }}" == "blue" ]; then
            docker compose build web-green api-green
            docker compose push web-green api-green
          else
            docker compose build web-blue api-blue
            docker compose push web-blue api-blue
          fi

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/ubuntu/my-docker-app  # Your server path
            git pull origin main
            export ACTIVE_ENV=${{ env.ACTIVE_ENV }}
            docker compose pull
            docker compose up -d
            curl -f http://localhost || exit 1
            docker compose up -d proxy