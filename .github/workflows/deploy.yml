name: Deploy Blue-Green

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine active environment
        id: env
        run: |
          # Assume a script or API checks the active environment on the server
          # For simplicity, alternate between blue and green
          ACTIVE_ENV=$( [ "$GITHUB_RUN_NUMBER" -eq "0" ] && echo "blue" || echo "green" )
          echo "ACTIVE_ENV=$ACTIVE_ENV" >> $GITHUB_ENV

      - name: Build and push Green images
        if: env.ACTIVE_ENV == 'blue'
        run: |
          docker compose build web-green api-green
          docker compose push web-green api-green

      - name: Build and push Blue images
        if: env.ACTIVE_ENV == 'green'
        run: |
          docker compose build web-blue api-blue
          docker compose push web-blue api-blue

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /path/to/my-docker-app
            git pull origin main
            export ACTIVE_ENV=${{ env.ACTIVE_ENV }}
            docker compose pull
            docker compose up -d
            # Test the new environment (e.g., curl http://localhost)
            curl -f http://localhost || exit 1
            # Update proxy to switch traffic
            docker compose up -d proxy